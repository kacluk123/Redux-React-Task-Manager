{"version":3,"sources":["logo.svg","reducers/toDoReducer.js","reducers/index.js","actions/types.js","store.js","actions/toDoActions.js","components/AddComponent/AddTask.js","components/ToDos/newToDo.js","components/ToDos/ToDos.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","toDos","combineReducers","state","arguments","length","undefined","action","type","payload","concat","Object","toConsumableArray","console","log","filter","todo","id","map","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","getTodo","dispatch","AddTask","task","priority","errors","onChange","e","_this","setState","defineProperty","target","name","value","sendTodo","preventDefault","_this$state","newToDo","Number","uuid","isNaN","props","addTodo","_this$state2","this","react_default","a","createElement","style","padding","className","onSubmit","classnames","is-invalid","placeholder","position","top","left","Component","connect","NewToDo","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onDelete","deleteTodo","textChange","onEdit","edit","_this$props$task","editedTodo","changeTodo","_this$props$task2","width","wordBreak","display","fontSize","marginRight","onClick","bind","float","cursor","ToDos","sort","b","ToDos_newToDo","App","es","AddComponent_AddTask","components_ToDos_ToDos","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8db3ee9b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import {ADD_TODO} from \"../actions/types\";\r\nimport {GET_TODO} from \"../actions/types\";\r\nimport {DELETE_TODO} from \"../actions/types\";\r\nimport {CHANGE_TODO} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    toDos: [],\r\n\r\n};\r\n\r\nexport default function(state=initialState.toDos, action){\r\n    switch(action.type){\r\n        case ADD_TODO:\r\n            return [action.payload, ...state]\r\n        case GET_TODO:\r\n        return [\r\n            ...state,\r\n        ]\r\n        case DELETE_TODO:\r\n            console.log(state)\r\n            return state.filter(todo => todo.id !== action.payload)\r\n        case CHANGE_TODO:\r\n            return state.map(todo => todo.id === action.payload.id ? (todo = action.payload) : todo)\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport toDoReducer from './toDoReducer';\r\n\r\nexport default combineReducers({\r\n    toDos: toDoReducer\r\n})","export const ADD_TODO = \"ADD_TODO\"\r\nexport const GET_TODO = \"ADD_TODO\"\r\nexport const DELETE_TODO = \"DELETE_TODO\"\r\nexport const CHANGE_TODO = \"CHANGE_TODO\"\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState,\r\n    compose(applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import {ADD_TODO} from \"./types\";\r\nimport {GET_TODO} from \"./types\";\r\nimport {DELETE_TODO} from \"./types\";\r\nimport {CHANGE_TODO} from \"./types\";\r\n\r\nexport const addTodo = (todo) => dispatch => {\r\n    dispatch({\r\n        type: ADD_TODO,\r\n        payload: todo,\r\n    })\r\n}\r\n\r\nexport const getTodo = () => dispatch => {\r\n    dispatch({\r\n        type: GET_TODO,\r\n    })\r\n}\r\n\r\nexport const deleteTodo = (id) => dispatch => {\r\n    dispatch({\r\n        type: DELETE_TODO,\r\n        payload: id,\r\n    })\r\n}\r\n\r\nexport const changeTodo = (todo) => dispatch => {\r\n    dispatch({\r\n        type: CHANGE_TODO,\r\n        payload: todo,\r\n    })\r\n}","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport uuid from 'uuid';\r\nimport classnames from 'classnames'\r\nimport { connect } from 'react-redux'\r\nimport {addTodo} from \"../../actions/toDoActions\";\r\nimport {getTodo} from \"../../actions/toDoActions\";\r\n\r\nclass AddTask extends Component {\r\n    state = {\r\n        task : '',\r\n        priority: '',\r\n        errors: {},\r\n\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n     sendTodo = (e) => {\r\n         e.preventDefault()\r\n         const {task, priority} = this.state;\r\n         const newToDo = {\r\n             task,\r\n             priority: Number(priority),\r\n             id: uuid(),\r\n         }\r\n\r\n         if (task === '') {\r\n             this.setState({errors: {task: 'Type something!'}})\r\n             return\r\n         }\r\n         if (priority === '') {\r\n             this.setState({errors: {priority: 'Type a priority'}})\r\n             return\r\n         }if (isNaN(priority) === true) {\r\n             this.setState({errors: {priority: 'Must be a number'}})\r\n             return\r\n         }\r\n         this.props.addTodo(newToDo);\r\n         this.setState({\r\n             task : '',\r\n             priority: '',\r\n             errors: {},\r\n         });\r\n\r\n     }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const {task, priority, errors} = this.state;\r\n\r\n        return (\r\n            <div style={{padding: '30px'}}className='container'>\r\n                <form onSubmit={this.sendTodo}>\r\n                    <div className=\"form-row\"  >\r\n                        <div className=\"col-sm-9\">\r\n                            <input onChange={this.onChange} type=\"text\" name=\"task\" className={classnames('form-control', {\r\n                                'is-invalid': errors.task\r\n                            })}  value={task} placeholder=\"Type a task\"/>  {errors.task && <div  style={{position: 'absolute'}} className=\"invalid-feedback\">{errors.task}</div>}\r\n                        </div>\r\n                        <div className=\"col-sm-2\">\r\n                            <input onChange={this.onChange} type=\"text\"style={{position: 'relative'}} name=\"priority\" className={classnames('form-control editedform', {\r\n                                'is-invalid': errors.priority\r\n                            })} value={priority} placeholder=\"Priority\"/>\r\n                            {errors.priority && <div className=\"invalid-feedback\" style={{position: 'absolute'}}>{errors.priority}</div>}\r\n                            <input  className=\"btn btn-primary rwd\" style={{position: 'absolute', top:'0', left: '100%'}} type=\"submit\" value=\"Add task\"/>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </form>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, {addTodo, getTodo})(AddTask);\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux'\r\nimport {deleteTodo} from \"../../actions/toDoActions\";\r\nimport {changeTodo} from \"../../actions/toDoActions\";\r\n\r\nclass NewToDo extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            edit: false,\r\n            task: '',\r\n        }\r\n    }\r\n    onDelete = (id) =>{\r\n        this.props.deleteTodo(id)\r\n    }\r\n    textChange = (e) =>{\r\n        this.setState({\r\n            task: e.target.value,\r\n        })\r\n    }\r\n    onEdit =()=>{\r\n        this.setState({\r\n            edit: !this.state.edit\r\n        })\r\n        const {priority, id} = this.props.task;\r\n\r\n        const editedTodo = {\r\n            task: this.state.task,\r\n            priority,\r\n            id,\r\n        }\r\n\r\n        if(this.props.task.task !== this.state.task\r\n            && this.state.task !== ''){\r\n            this.props.changeTodo(editedTodo)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n       const {task, priority, id} = this.props.task;\r\n\r\n            return (\r\n                <li className=\"list-group-item\">{ this.state.edit ?<input type=\"text\" onChange={this.textChange} placeholder={task} className=\"form-control\" id=\"formGroupExampleInput2\"\r\n                                                                                value={this.state.task}/>: <span style={{width: '80%', wordBreak:'break-all',}}>{task}</span> }\r\n\r\n                         <div  style={{display: 'flex'}}>\r\n                             <div style={{fontSize: '20px', marginRight: '20px'}}><span>Priority</span><span>{priority}</span></div>\r\n                             <i className=\"far fa-trash-alt\" onClick={this.onDelete.bind(this, id )} style={{fontSize: '30px', float: 'right', cursor:'pointer'}}></i>\r\n                    <i className=\"far fa-edit\" onClick={this.onEdit} style={{fontSize: '30px',cursor:'pointer', marginRight: '10px', float: 'right'}}></i>\r\n                         </div>\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\nNewToDo.propTypes = {\r\n    task: PropTypes.object.isRequired,\r\n    deleteTodo: PropTypes.func.isRequired,\r\n    changeTodo: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default connect(null, {deleteTodo, changeTodo})(NewToDo);\r\n\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport NewToDo from './newToDo'\r\nimport {getTodo} from \"../../actions/toDoActions\";\r\nimport {connect} from 'react-redux'\r\nclass ToDos extends Component {\r\n    render() {\r\n        const {toDos} = this.props;\r\n        console.log(toDos)\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"card\">\r\n                    <ul className=\"list-group list-group-flush\">\r\n                    {toDos.sort(function(a,b) {return b.priority-a.priority;}).map( todo => (\r\n                    <NewToDo task={todo}/>\r\n                ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nToDos.propTypes = {\r\n    toDos: PropTypes.array.isRequired,\r\n    getTodo: PropTypes.func.isRequired,\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    toDos: state.toDos\r\n})\r\n\r\nexport default connect(mapStateToProps, {getTodo})(ToDos);","import React, { Component } from 'react';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport AddTask from './components/AddComponent/AddTask'\nimport ToDos from './components/ToDos/ToDos'\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div>\n            <AddTask/>\n            <ToDos/>\n        </div>\n      </Provider>\n\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}